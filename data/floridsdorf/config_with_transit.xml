<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
	<module name="global" >
		<param name="numberOfThreads" value="3" />
		<param name="coordinateSystem" value="epsg:31256" />
	</module>

	<module name="network">
		<param name="inputNetworkFile" value="./network_with_transit.xml" />
	</module>

	<module name="plans">
		<param name="inputPlansFile" value="./population_with_transit.xml" />
	</module>

	<module name="controler">
		<param name="outputDirectory" value="./output" />
		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="deleteDirectoryIfExists" />
		<param name="firstIteration" value="0" />
		<!-- must be a multiple of writeEventsInterval (default: 10) -->
		<param name="lastIteration" value="0" />
		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="1" />
		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="1" />
		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="1" />
	</module>

	<module name="transit">
		<!-- The type of transit routing algorithm used, may have the values: [DijkstraBased, SwissRailRaptor] -->
		<param name="routingAlgorithmType" value="SwissRailRaptor" />
		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt,bus,tram,subway,rail,ferry" />
		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="./transit_schedule.xml" />
		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="true" />
		<param name="usingTransitInMobsim" value="true" />
		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="./transit_vehicles.xml" />
	</module>

	<!-- all params here are also respected by SwissRailRaptor IFF useIntermodalAccessEgress=False -->
	<module name="transitRouter">
	</module>

	<!-- more detailed config for SwissRailRaptor -->
	<module name="swissRailRaptor">
		<param name="useIntermodalAccessEgress" value="false" />
	</module>

	<module name="planscalcroute" >
		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />
	</module>

	<module name="qsim" >
		<param name="numberOfThreads" value="3" />
		<param name="startTime" value="00:00:00" />
		<param name="endTime" value="30:00:00" />
		<param name="mainMode" value="car" />
	</module>

	<module name="planCalcScore">
		<!-- specify possible activities of agents -->
		<parameterset type="activityParams" >
			<param name="activityType" value="education" />
			<param name="typicalDuration" value="06:00:00" />
		</parameterset>
		<parameterset type="activityParams" >
			<param name="activityType" value="errand" />
			<param name="typicalDuration" value="01:00:00" />
		</parameterset>
		<parameterset type="activityParams" >
			<param name="activityType" value="home" />
			<param name="typicalDuration" value="12:00:00" />
		</parameterset>
		<parameterset type="activityParams" >
			<param name="activityType" value="leisure" />
			<param name="typicalDuration" value="01:00:00" />
		</parameterset>
		<parameterset type="activityParams" >
			<param name="activityType" value="shopping" />
			<param name="typicalDuration" value="00:30:00" />
		</parameterset>
		<parameterset type="activityParams" >
			<param name="activityType" value="work" />
			<param name="typicalDuration" value="08:00:00" />
		</parameterset>
	</module>

	<module name="strategy">
		<param name="maxAgentPlanMemorySize" value="0" /> <!-- 0 means unlimited -->
		<parameterset type="strategysettings">
			<param name="strategyName" value="SelectExpBeta"/>
			<param name="weight" value="0.8"/>
		</parameterset>
		<parameterset type="strategysettings">
			<param name="strategyName" value="ReRoute"/>
			<param name="weight" value="0.1"/>
		</parameterset>
		<parameterset type="strategysettings">
			<param name="strategyName" value="SubtourModeChoice"/>
			<param name="weight" value="0.1"/>
		</parameterset>
	</module>

	<module name="subtourModeChoice" >
		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car" />
		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<!-- Note: population should use these String attributes: "carAvail" (always, sometimes, never) and "hasLicense" (no, yes) -->
		<param name="considerCarAvailability" value="true" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,bike,pt,walk" />
	</module>

</config>
