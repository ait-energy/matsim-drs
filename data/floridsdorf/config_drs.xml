<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<!-- minimal example showing how to set up drs (with mode innovation and a regular population not containing initial drsDriver/Riders) -->
<config>
    <module name="global">
        <param name="numberOfThreads" value="3" />
        <param name="coordinateSystem" value="epsg:31256" />
    </module>

    <module name="network">
        <param name="inputNetworkFile" value="./network.xml" />
    </module>

    <module name="plans">
        <param name="inputPlansFile" value="./population.xml" />
    </module>

    <module name="controller">
        <param name="outputDirectory" value="./output-floridsdorf-drs" />
        <param name="overwriteFiles" value="deleteDirectoryIfExists" />
        <param name="firstIteration" value="0" />
        <param name="lastIteration" value="10" />
        <param name="writeEventsInterval" value="1" />
        <param name="writePlansInterval" value="1" />
        <param name="writeSnapshotsInterval" value="1" />
    </module>

    <module name="qsim">
        <param name="numberOfThreads" value="3" />
        <param name="startTime" value="00:00:00" />
        <param name="endTime" value="30:00:00" />
        <!-- DRS NOTE: drsDriver mode must be added as a mainMode to QSim -->
        <param name="mainMode" value="car,drsDriver" />
    </module>

    <module name="routing">
        <!-- <param name="accessEgressType" value="accessEgressModeToLink" /> -->
        <!-- DRS NOTE: drsDriver mode must be added as a networkMode -->
        <param name="networkModes" value="car,drsDriver" />

        <!-- DRS NOTE: drsRider routes are internally calculated with the drsDriver routing module.
             Unfortunately we still need to provide a teleportation config for drsRider
             because it may be used by the ReRoute strategy (even if the result of the rerouting does not make sense
             and will be replaced by the results of our matching algorithm immediately.)
             To specify a teleportation config for drsRider we need to also explicitly set the
             default modes, because they are deleted as soon as a single mode is configured here :/ -->
        <param name="clearDefaultTeleportedModeParams" value="true" />
        <parameterset type="teleportedModeParameters">
            <param name="beelineDistanceFactor" value="1.3" />
            <param name="mode" value="bike" />
            <param name="teleportedModeSpeed" value="4.166666666666667" />
        </parameterset>
        <parameterset type="teleportedModeParameters">
            <param name="beelineDistanceFactor" value="1.3" />
            <param name="mode" value="walk" />
            <param name="teleportedModeSpeed" value="0.8333333333333333" />
        </parameterset>
        <parameterset type="teleportedModeParameters">
            <param name="beelineDistanceFactor" value="1.3" />
            <param name="mode" value="non_network_walk" />
            <param name="teleportedModeSpeed" value="0.8333333333333333" />
        </parameterset>
        <parameterset type="teleportedModeParameters">
            <param name="beelineDistanceFactor" value="1.3" />
            <param name="mode" value="ride" />
            <param name="teleportedModeFreespeedFactor" value="1.0" />
        </parameterset>
        <parameterset type="teleportedModeParameters">
            <param name="beelineDistanceFactor" value="1.3" />
            <param name="mode" value="pt" />
            <param name="teleportedModeFreespeedFactor" value="2.0" />
        </parameterset>
        <parameterset type="teleportedModeParameters">
            <param name="beelineDistanceFactor" value="1.3" />
            <param name="mode" value="drsRider" />
            <param name="teleportedModeFreespeedFactor" value="2.0" />
        </parameterset>
    </module>

    <module name="scoring">
        <param name="writeExperiencedPlans" value="true" />
        <parameterset type="activityParams">
            <param name="activityType" value="education" />
            <param name="typicalDuration" value="06:00:00" />
        </parameterset>
        <parameterset type="activityParams">
            <param name="activityType" value="errand" />
            <param name="typicalDuration" value="01:00:00" />
        </parameterset>
        <parameterset type="activityParams">
            <param name="activityType" value="home" />
            <param name="typicalDuration" value="12:00:00" />
        </parameterset>
        <parameterset type="activityParams">
            <param name="activityType" value="leisure" />
            <param name="typicalDuration" value="01:00:00" />
        </parameterset>
        <parameterset type="activityParams">
            <param name="activityType" value="shopping" />
            <param name="typicalDuration" value="00:30:00" />
        </parameterset>
        <parameterset type="activityParams">
            <param name="activityType" value="work" />
            <param name="typicalDuration" value="08:00:00" />
        </parameterset>

        <!-- DRS NOTE: activityParams and modeParams must be added for drs
             (the others are added by default)-->
        <parameterset type="activityParams">
            <param name="activityType" value="drsDriver interaction" />
            <param name="priority" value="1.0" />
            <param name="scoringThisActivityAtAll" value="false" />
            <param name="typicalDurationScoreComputation" value="relative" />
        </parameterset>
        <parameterset type="modeParams">
            <param name="constant" value="0.0" />
            <!-- DRS NOTE: dailyMonetaryConstant must be 0 to avoid double dailyMonetaryCost in case a plan has both car and drsDriver modes
                 (use drs.carAndDrsDailyMonetaryConstant instead) -->
            <param name="dailyMonetaryConstant" value="0.0" />
            <param name="marginalUtilityOfDistance_util_m" value="0.0" />
            <param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
            <param name="mode" value="car" />
            <!-- DRS NOTE: should be the same as monetaryDistanceRate for drsDriver -->
            <param name="monetaryDistanceRate" value="0"/>
        </parameterset>
        <parameterset type="modeParams">
            <param name="constant" value="0.0" />
            <!-- DRS NOTE: dailyMonetaryConstant must be 0 to avoid double dailyMonetaryCost in case a plan has both car and drsDriver modes
                 (use drs.carAndDrsDailyMonetaryConstant instead) -->
            <param name="dailyMonetaryConstant" value="0.0" />
            <param name="marginalUtilityOfDistance_util_m" value="0.0" />
            <!-- DRS NOTE: for this example better score for DRS modes -->
            <param name="marginalUtilityOfTraveling_util_hr" value="-3.0" />
            <param name="mode" value="drsDriver" />
            <!-- DRS NOTE: should be the same as monetaryDistanceRate for car -->
            <param name="monetaryDistanceRate" value="0"/>
            <!-- let's see if people pick up drs now.. -->
        </parameterset>
        <!-- DRS NOTE: The scoring config for drsRider applies to BOTH matched an unmatched riders.
             (there shouldn't be unmatched riders anymore) -->
        <parameterset type="modeParams">
            <param name="constant" value="0.0" />
            <param name="dailyMonetaryConstant" value="0.0" />
            <param name="marginalUtilityOfDistance_util_m" value="0.0" />
            <!-- DRS NOTE: for this example better score for DRS modes -->
            <param name="marginalUtilityOfTraveling_util_hr" value="-3.0" />
            <param name="mode" value="drsRider" />
            <!-- DRS NOTE: costs for using drs as rider -->
            <param name="monetaryDistanceRate" value="0"/>
        </parameterset>
    </module>

    <module name="replanning">
        <param name="maxAgentPlanMemorySize" value="5" />
        <param name="planSelectorForRemoval" value="WorstPlanForRemovalSelectorWithConflicts" />
        <param name="fractionOfIterationsToDisableInnovation" value="0.9" />
        <parameterset type="strategysettings">
            <!-- BestScore for deterministic tests. in production you should use SelectExpBeta -->
            <param name="strategyName" value="BestScore"/>
            <param name="weight" value="0.6"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="strategyName" value="ReRoute"/>
            <param name="weight" value="0.1"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="strategyName" value="SubtourModeChoice"/>
            <param name="weight" value="0.3"/>
        </parameterset>
    </module>

    <!-- DRS NOTE: when using SubtourModeChoice the drs modes must be added -->
    <module name="subtourModeChoice">
        <param name="chainBasedModes" value="car,drsDriver,bike" />
        <param name="modes" value="car,drsDriver,drsRider,pt,bike,walk" />
    </module>

    <module name="DiscreteModeChoice">
        <param name="modelType" value="Tour" />

        <param name="modeAvailability" value="CarAndDrsDriver" />
        <!-- TODO how to get rid of java.lang.IllegalStateException: Unknown component configuration of type 'modeAvailability' and name 'CarAndDrsDriver'. -->
        <parameterset type="modeAvailability:CarAndDrsDriver">
            <param name="availableModes" value="car,drsDriver,drsRider,pt,bike,walk" />
        </parameterset>

        <!--<param name="tourEstimator" value="MATSimDayScoring" />-->
        <param name="tourEstimator" value="Uniform" />

        <!--<param name="selector" value="MultinomialLogit" />-->
        <param name="selector" value="Random" />

        <param name="tourFinder" value="ActivityBased" />
        <parameterset type="tourFinder:ActivityBased">
            <!-- means that each home activity marks the end of a tour -->
            <param name="activityTypes" value="home" />
        </parameterset>

        <param name="tourConstraints" value="VehicleContinuity" />
    </module>

    <!-- DRS NOTE: main drs config, leave empty to use defaults -->
    <module name="drs">
        <param name="driverProfitPerKm" value="1" />
        <param name="maxMatchingDistanceMeters" value="500" />
        <param name="pickupWaitingSeconds" value="300" />
    </module>

</config>
