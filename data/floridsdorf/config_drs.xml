<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<!-- minimal example showing how to set up drs (with mode innovation and a regular population not containing initial drsDriver/Riders) -->
<config>
    <module name="global">
        <param name="numberOfThreads" value="3" />
        <param name="coordinateSystem" value="epsg:31256" />
    </module>

    <module name="network">
        <param name="inputNetworkFile" value="./network.xml" />
    </module>

    <module name="plans">
        <param name="inputPlansFile" value="./population.xml" />
    </module>

    <module name="controler">
        <param name="outputDirectory" value="./output-floridsdorf-drs" />
        <param name="overwriteFiles" value="deleteDirectoryIfExists" />
        <param name="firstIteration" value="0" />
        <param name="lastIteration" value="6" />
        <param name="writeEventsInterval" value="1" />
        <param name="writePlansInterval" value="1" />
        <param name="writeSnapshotsInterval" value="1" />
    </module>
    <!-- drsDriver mode must be added as a mainMode to QSim -->
    <module name="qsim">
        <param name="numberOfThreads" value="3" />
        <param name="startTime" value="00:00:00" />
        <param name="endTime" value="30:00:00" />
        <param name="mainMode" value="car,drsDriver" />
    </module>

    <module name="planscalcroute">
        <!-- drsDriver mode must be added as a networkMode -->
        <param name="networkModes" value="car,drsDriver" />
        <param name="clearDefaultTeleportedModeParams" value="true" />

        <parameterset type="teleportedModeParameters">
            <param name="beelineDistanceFactor" value="1.3" />
            <param name="mode" value="bike" />
            <param name="teleportedModeSpeed" value="4.166666666666667" />
        </parameterset>
        <parameterset type="teleportedModeParameters">
            <param name="beelineDistanceFactor" value="1.3" />
            <param name="mode" value="walk" />
            <param name="teleportedModeSpeed" value="0.8333333333333333" />
        </parameterset>
        <parameterset type="teleportedModeParameters">
            <param name="beelineDistanceFactor" value="1.3" />
            <param name="mode" value="non_network_walk" />
            <param name="teleportedModeSpeed" value="0.8333333333333333" />
        </parameterset>
        <parameterset type="teleportedModeParameters">
            <param name="beelineDistanceFactor" value="1.3" />
            <param name="mode" value="ride" />
            <param name="teleportedModeFreespeedFactor" value="1.0" />
        </parameterset>
        <parameterset type="teleportedModeParameters">
            <param name="beelineDistanceFactor" value="1.3" />
            <param name="mode" value="pt" />
            <param name="teleportedModeFreespeedFactor" value="2.0" />
        </parameterset>

        <!-- The routing config for drsRider here is ONLY relevant for UNMATCHED riders,
             since matched riders will either be picked up by the driver (or stuck).
             The idea is that unmatched riders should not be stuck but get a mobility guarantee.
             To avoid persons switching from fast modes (such as car) to drsRider arrive late 
             the proposed config of beelineDistanceFactor=2 and teleportedModeSpeed=8.3 is recommended. -->
        <parameterset type="teleportedModeParameters">
            <param name="beelineDistanceFactor" value="2" />
            <param name="mode" value="drsRider" />
            <param name="teleportedModeSpeed" value="8.3" />
        </parameterset>
    </module>

    <module name="planCalcScore">
        <parameterset type="activityParams">
            <param name="activityType" value="education" />
            <param name="typicalDuration" value="06:00:00" />
        </parameterset>
        <parameterset type="activityParams">
            <param name="activityType" value="errand" />
            <param name="typicalDuration" value="01:00:00" />
        </parameterset>
        <parameterset type="activityParams">
            <param name="activityType" value="home" />
            <param name="typicalDuration" value="12:00:00" />
        </parameterset>
        <parameterset type="activityParams">
            <param name="activityType" value="leisure" />
            <param name="typicalDuration" value="01:00:00" />
        </parameterset>
        <parameterset type="activityParams">
            <param name="activityType" value="shopping" />
            <param name="typicalDuration" value="00:30:00" />
        </parameterset>
        <parameterset type="activityParams">
            <param name="activityType" value="work" />
            <param name="typicalDuration" value="08:00:00" />
        </parameterset>

        <!-- activityParams and modeParams must be added for drs 
             (the others are added by default)-->
        <parameterset type="activityParams">
            <param name="activityType" value="drsDriver interaction" />
            <param name="priority" value="1.0" />
            <param name="scoringThisActivityAtAll" value="false" />
            <param name="typicalDurationScoreComputation" value="relative" />
        </parameterset>
        <parameterset type="modeParams">
            <param name="constant" value="0.0" />
            <!-- dailyMonetaryConstant must be 0 to avoid double dailyMonetaryCost in case a plan has both car and drsDriver modes
                 (use drs.carAndDrsDailyMonetaryConstant instead) -->
            <param name="dailyMonetaryConstant" value="0.0" />
            <param name="marginalUtilityOfDistance_util_m" value="0.0" />
            <param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
            <param name="mode" value="car" />
            <!-- should be the same as monetaryDistanceRate for drsDriver -->
            <param name="monetaryDistanceRate" value="-0.000091"/>
        </parameterset>
        <!-- The scoring config for drsRider applies to BOTH matched an unmatched riders.
             To avoid masses of unmatched riders we should apply costs to the that,
             but ideally not here but in drs.riderMobilityGuaranteeMonetaryConstant -->
        <parameterset type="modeParams">
            <param name="constant" value="0.0" />
            <param name="dailyMonetaryConstant" value="0.0" />
            <param name="marginalUtilityOfDistance_util_m" value="0.0" />
            <param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
            <param name="mode" value="drsRider" />
            <!-- costs for using drs as rider -->
            <param name="monetaryDistanceRate" value="-0.0002"/>
        </parameterset>
        <parameterset type="modeParams">
            <param name="constant" value="0.0" />
            <!-- dailyMonetaryConstant must be 0 to avoid double dailyMonetaryCost in case a plan has both car and drsDriver modes
                 (use drs.carAndDrsDailyMonetaryConstant instead) -->
            <param name="dailyMonetaryConstant" value="0.0" />
            <param name="marginalUtilityOfDistance_util_m" value="0.0" />
            <param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
            <param name="mode" value="drsDriver" />
            <!-- should be the same as monetaryDistanceRate for car -->
            <param name="monetaryDistanceRate" value="-0.000091"/>
        </parameterset>
    </module>

    <module name="strategy">
        <param name="maxAgentPlanMemorySize" value="5" />
        <parameterset type="strategysettings">
            <param name="strategyName" value="SelectExpBeta"/>
            <param name="weight" value="0.8"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="strategyName" value="ReRoute"/>
            <param name="weight" value="0.1"/>
        </parameterset>
        <parameterset type="strategysettings">
            <!-- for drs this strategy must be used instead of regular SubtourModeChoice -->
            <param name="strategyName" value="SubtourModeChoiceForDrs"/>
            <param name="weight" value="0.1"/>
        </parameterset>
    </module>

    <!-- Specify drs details, leave empty to use defaults -->
    <module name="drs">
        <param name="driverProfitPerKm" value="0.8" />
        <param name="carAndDrsDailyMonetaryConstant" value="-12.34" />
        <!-- cost per UNMATCHED rider trips (used to avoid too many riders that can not be served by the drivers)-->
        <param name="riderMobilityGuaranteeMonetaryConstant" value="-10" />
        <param name="pickupWaitingSeconds" value="180" />
    </module>
</config>